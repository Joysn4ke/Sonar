/**
  ******************************************************************************
  * @file    apds9960_demoProximity
  * @author  Cécile Lebrun
  * @version V1.0
  * @date    27-Janvier-2017
  * @brief   Fichier exemple de l'utilisation du capteur APDS9960 en mode capteur de proximité. Il permet
  *			 d'allumer une led si une présence est détectée à proximité du capteur.
  *
  ******************************************************************************
*/
#include "stm32f1xx_hal.h"
#include "stm32f1xx_nucleo.h"
#include "stm32f1_uart.h"
#include "stm32f1_sys.h"
#include "macro_types.h"
#include "stm32f1_gpio.h"
#include "APDS9960/apds9960.h"


int main(void)
{
	HAL_Init();			//Initialisation de la couche logicielle HAL (Hardware Abstraction Layer)
	BSP_GPIO_Enable();	//Activation des périphériques GPIO
	SYS_ClockConfig();		//Configuration des horloges.

	//Initialisation de l'UART1 à la vitesse de 115200 bauds/secondes (92kbits/s) PB6 : Tx  | PB7 : Rx.
	UART_init(UART1_ID,115200);

	//"Indique que les printf sortent vers le périphérique UART1."
	SYS_set_std_usart(UART1_ID, UART1_ID, UART1_ID);

	//Initialisation du port de la led verte (carte Nucleo)
	BSP_GPIO_PinCfg(LED_GREEN_GPIO, LED_GREEN_PIN, GPIO_MODE_OUTPUT_PP,GPIO_NOPULL,GPIO_SPEED_FREQ_HIGH);

	//Initialisation du capteur.
	init();

	//Activation du capteur en mode capteur de proximité.
	enableProximitySensor(FALSE);

	//Variable de stockage du niveau de proximité.
	uint8_t proximity = 0;

	while(1)
	{
		//On lit le niveau de proximité
		readProximity(&proximity);

		//Si le niveau est > 100, soit une distance d'environ 11-12cm...
		if (proximity > 100) {
			//...On allume la led verte.
			HAL_GPIO_WritePin(LED_GREEN_GPIO, LED_GREEN_PIN, 1);
		}
		else
			//Sinon on l'éteint.
			HAL_GPIO_WritePin(LED_GREEN_GPIO, LED_GREEN_PIN, 0);
	}
}


